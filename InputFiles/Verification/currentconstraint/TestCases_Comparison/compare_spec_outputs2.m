function compare_spec_outputs2(data1, data2, tolerance)

% Compare field and geoemtry between two SPEC outputs. Prints message only
% in case of missmatch
%
% INPUT
% -----
% data1:     obtained via read_spec(filename1)
% data2:     obtained via read_spec(filename2)
% tolerance: Print message if difference above this parameter
%
% Written by A. Baillod (2020)


    %test vector potential
    N = length(data1.vector_potential.Ate);

    for ii=1:N
        %disp(['------------- Volume ', num2str(ii), ' --------------'])
        
        % Vector potential
        compare_arrays( data1.vector_potential.Ate{ii}, ...
                        data2.vector_potential.Ate{ii}, ...
                        tolerance, ...
                        ['Ate does not seem to match in volume ', num2str(ii)]);
        compare_arrays( data1.vector_potential.Ato{ii}, ...
                        data2.vector_potential.Ato{ii}, ...
                        tolerance, ...
                        ['Ato does not seem to match in volume ', num2str(ii)]);
        compare_arrays( data1.vector_potential.Aze{ii}, ...
                        data2.vector_potential.Aze{ii}, ...
                        tolerance, ...
                        ['Aze does not seem to match in volume ', num2str(ii)]);
        compare_arrays( data1.vector_potential.Azo{ii}, ...
                        data2.vector_potential.Azo{ii}, ...
                        tolerance, ...
                        ['Azo does not seem to match in volume ', num2str(ii)]);
    end
                    
    % Geometry
    %disp(['-------------- Interface geometry -------------'])
    compare_arrays( data1.output.Rbc, ...
                    data2.output.Rbc, ...
                    tolerance, ...
                    'Rbc does not seem to match');
    compare_arrays( data1.output.Rbs, ...
                    data2.output.Rbs, ...
                    tolerance, ...
                    'Rbs does not seem to match');
    compare_arrays( data1.output.Zbc, ...
                    data2.output.Zbc, ...
                    tolerance, ...
                    'Zbc does not seem to match');
    compare_arrays( data1.output.Zbs, ...
                    data2.output.Zbs, ...
                    tolerance, ...
                    'Zbs does not seem to match');

end


function compare_arrays(array1, array2, tol, info)

    delta_abs = abs(array1 - array2);
    delta_rel = abs(array1 - array2) ./ array1;
    [tmp, ind] = max(delta_abs);
    [delta_abs_max, ind2] = max(tmp);
    ind = ind(ind2);
    delta_rel_max = delta_rel(ind);

    if (delta_abs_max > tol)
      disp(info);
      disp(['delta_abs_max = ', num2str(delta_abs_max)]);
      disp(['delta_rel_max = ', num2str(delta_rel_max), newline]);
    end
    
end