m4_changequote({,})m4_dnl
m4_changecom(!)m4_dnl
m4_define(INTEGER,integer)m4_dnl
m4_define(REAL,real(wp))m4_dnl
m4_define(CHARACTER,character)m4_dnl
m4_define(GETTIME,MPI_WTIME())m4_dnl
m4_define(MPISTART,{
  myid = 0 ; ncpu = 1
  call MPI_INIT( ierr )
  call MPI_COMM_RANK( MPI_COMM_WORLD, myid, ierr )
  call MPI_COMM_SIZE( MPI_COMM_WORLD, ncpu, ierr )
})m4_dnl
m4_define(MPIFINALIZE,{
   call MPI_FINALIZE(ierr)
})m4_dnl
m4_define(LOCALS,{
#ifdef OPENMP
  USE OMP_LIB
#endif
  use mpi
  implicit none
  INTEGER   :: ierr, astat, ios, nthreads, ithread
  REAL      :: cput, cpui, cpuo=0 ! cpu time; cpu initial; cpu old; 31 Jan 13;
})m4_dnl
m4_define(GETTHREAD,{
#ifdef OPENMP
  ithread = omp_get_thread_num() + 1
#else
  ithread = 1
#endif
})m4_dnl
m4_define(SALLOCATE,{
   allocate( $1$2, stat=astat )
   $1$2 = $3
})m4_dnl
m4_define(NALLOCATE,{
   allocate($1$2,stat=astat)
})m4_dnl
m4_define(DALLOCATE,{
   deallocate($1,stat=astat)
})m4_dnl
m4_define(FATAL,{
   if( $2 ) then
     write(6,'("$1 :      fatal : myid=",i3," ; $2 ; $3;")') myid
     call MPI_ABORT( MPI_COMM_SPEC, 1, ierr )
     stop "$1 : $2 : $3 ;"
    endif
})m4_dnl
m4_define(LlBCAST,{
   call MPI_BCAST($1,$2,MPI_LOGICAL,$3,MPI_COMM_SPEC,ierr)
})m4_dnl
m4_define(IlBCAST,{
   call MPI_BCAST( $1, $2, MPI_INTEGER, $3, MPI_COMM_SPEC, ierr )
})m4_dnl
m4_define(RlBCAST,{
   call MPI_BCAST($1,$2,MPI_DOUBLE_PRECISION,$3,MPI_COMM_SPEC,ierr)
})m4_dnl
m4_define(ClBCAST,{
   call MPI_BCAST($1,$2,MPI_CHARACTER,$3,MPI_COMM_SPEC,ierr)
})m4_dnl
m4_define(CALL,{
   cput = MPI_WTIME()
   T$1 = T$1 + ( cput-cpuo )
   call $2$3
   cpuo = MPI_WTIME()
})m4_dnl
m4_define(WCALL,{
   cput = MPI_WTIME()
   T$1 = T$1 + ( cput-cpuo )
   call $2$3
   cpuo = MPI_WTIME()
})m4_dnl
m4_define(BEGIN,{
  cpui = MPI_WTIME()
  cpuo = cpui
#ifdef OPENMP
  nthreads = omp_get_max_threads()
#else
  nthreads = 1
#endif
})m4_dnl
m4_define(LREGION,{
   if( Igeometry.eq.1 .or. $1.gt.1 ) then ; Lcoordinatesingularity = .false.
   else                                   ; Lcoordinatesingularity = .true.
   endif

   if( $1.le.Nvol ) then ; Lplasmaregion = .true.
   else                  ; Lplasmaregion = .false.
   endif

   Lvacuumregion = .not.Lplasmaregion
})m4_dnl
m4_define(RETURN,{
9999 continue
  cput = MPI_WTIME()
  T$1 = T$1 + ( cput-cpuo )
  return
})m4_dnl
m4_define(SUMTIME,{
   call MPI_REDUCE(T$1, $1T, 1, MPI_DOUBLE_PRECISION, MPI_SUM, 0, MPI_COMM_SPEC, ierr )
})m4_dnl
m4_define(PRTTIME,{
   write(ounit,'("finish : ",f10.2," : time spent in $1 =",f10.2," ;")') cput-cpus, $1T ; Ttotal = Ttotal + $1T
})m4_dnl
m4_define(TMPOUT,{
  if( myid .eq. 0) write(ounit,*) "### DEBUG : $1 = ", $1
})m4_dnl
m4_define(MPIOUT,{
  write(ounit,*) "*** DEBUG : myid = ", myid, " ; $1 = ", $1
})m4_dnl
